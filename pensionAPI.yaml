openapi: 3.1.0
info:
  version: 1.1.0
  title: Pension
  # yamllint disable rule:indentiation
  # yamllint disable rule:line-length
  description: |
    # Pension-API (Deutsch)

    **** Deutsch (for English see below) ****

    Mit dem Pension-API können Daten zur versicherten Person und deren Vorsorgesituation abgefragt werden.
    Dies umfasst vereinfacht gesagt die Daten, die auf dem Versicherungsausweis zu finden sind.
    Auch die Erstellung bzw. das Beziehen von bereits erstellten Versicherungsausweisen als PDF-Datei
    ist möglich. Des Weiteren gibt es Endpunkte für Simulationen und für Transaktionen.

    Als Einstieg fürs Pension-API wird eine technische Personen-, Statement- oder Policen-ID benötigt.

    Die wesentlichen Objekte dieses APIs sind *Person*, *Police* und *Pension Statement*. Person bezieht sich
    immer auf eine natürliche Person, die bei einer Pensionskasse versichert ist.

    Die Police beschreibt den indirekten Versicherungsvertrag zwischen der versicherten Person
    (ArbeitnehmerIn) und der Pensionskasse. Ist eine Person über zwei Vorsorgepläne versichert,
    z.B. über einen Basis- und einen zusätzlichen Kaderplan, so hat sie zwei Policen.

    Das Pension Statement umfasst grundsätzlich die gleichen persönlichen Vorsorgedaten wie die Policen,
    kann aber die Daten verschiedener Policen aggregieren. Je nach Pensionkasse wird dies unterschiedlich
    gehandhabt.

    Die PDF-Version des Vorsorgeausweises entspricht dem Dokument, welches traditionell anfangs Jahr durch
    die Pensionskasse für die Versicherten ausgestellt wird.

    Das API umfasst auch Simulationen:
    - Änderung des Beschäftigtengrads und/oder des Lohns
    - Freiwilliger Einkauf in die Pensionskasse
    Die Simulationen berechnen die Effekte auf die monatlichen Beiträge sowie auf die voraussichtlichen
    Rentenleistungen bei unterschiedlichem Pensionierungsalter.

    Die in dieser Spezifikation angegebenen URLs sind nur Beispiel-URLs. Das API wird von einer
    Vielzahl von Pensionskassen implementiert und jede Pensionskasse hat eine andere Basis-URL
    für das API. Die Basis-URL der jeweiligen Pensionskasse wird vom Directory API geliefert.


    ## Simulation

    Die Simulation berechnet, wie hoch das Altersguthaben und die Rente mit und ohne Einkauf sein wird.
    Dabei können verschiedene Parameter gewählt werden:

    - Einkaufssumme (gesamt)
    - Pensionierungsalter
    - Betrag pro Zahlung (bei mehreren Zahlungen)
    - Zahlungsperiodizität (bei mehreren Zahlungen)
    - Datum der (ersten) Zahlung

    Die Simulation geht davon aus, dass die gesetzlichen Voraussetzungen für den Einkauf gegeben sind. Sie prüft,
    dass der maximale Einkaufsbetrag nicht überschritten wird, und passt ihn bei Bedarf an.


    ## Kontobewegung

    Das Kontobewegungsendpunkte liefert die Kontobewegungen des Altersguthabens einer Police.


    # Pension API (English)

    **** English (für Deutsch siehe weiter oben) ****

    The Pension API serves to query details about the insured person and their pension situation.
    In simplified terms, this includes the data found on the insurance certificate.
    Additionally, policy statements can be generated or already generated statements can be
    retrieved as PDF files. There are also endpoints for simulations and for transactions.

    Person, statement and policy IDs serve as the entry point for this API.

    The main objects of this API are *Person*, *Policy* and *Pension Statement*. Person always refers
    to a natural person who is insured with a pension fund.

    The policy describes the indirect insurance contract between the insured person (employee)
    and the pension fund. If a person is insured under two pension plans,
    e.g. via a basic plan and an additional management plan, he or she has two policies.

    The pension statement basically contains the same personal pension data as the policies,
    but can aggregate the data from different policies. This is handled differently depending on the pension fund.

    The PDF version of the pension certificate corresponds to the document that is traditionally issued to the
    insured persons by the pension fund at the beginning of the year.

    The API also includes simulations:
    - Change of employment level and/or salary
    - Voluntary purchase into the pension fund
    The simulations calculate the effects on the monthly contributions as well as the effects of the
    perspective pension benefits for different retirement ages.

    The URLs in the specification are examples only. The API is implemented by a many
    pension funds and each pension fund has an individual base URL for the API.
    The base URL of a specific pension fund is provided by the directory API.


    ## Simulation

    The simulation calculates the prospective retirement capital and pension with and without voluntary purchase.
    Several parameters of the simulation can be specified:

    - Purchase amount (total)
    - Pension age
    - Amount of individual payments (if several payments are made towards a purchase)
    - Payment frequency (if several payments are made towards a purchase)
    - Date of (first) payment

    The simulation assumes that the legal prerequisites for the purchase are fulfilled. It checks that the maximum purchase amount is not
    exceeded and modifies it if needed.


    ## Transactions

    The Transactions endpoints provide the transactions affecting the retirement capital of a policy.


    ### Glossar / Glossary

    Folgende englischen Begriffe werden im API verwendet / The following English terms are used in the API :

    - **Social Security Number (SSN)**: Sozialversicherungsnummer (SVN) - 13 stellige, Schweizer Sozialversicherungsnummer.
    - **Mandatory / supplementary coverage**: Obligatorischer / überobligatorische Anteil / Deckung
    - **Retirement benefits**: Versicherungsleistungen bei Pensionierung (Altersrente und Altersguthaben)
    - **Risk benefits**: Versicherungsleistungen bei Invalidität und Tod
    - **Enveloping interest/conversion rate**: Umhüllender Zinssatz / Umwandlungssatz
    - **Retirement capital**: Altersguthaben / Alterskapital
    - **Savings contribution**: Sparbeitrag (Beitrag an Altersgutben)
    - **Risk contribution**: Risikobeitrag (Beitrag für Leistungen bei Invalidität und Tod)
    - **Vested benefits**: Freizügigkeitsleistungen
  # yamllint enable rule:indentiation
  # yamllint enable rule:line-length

  contact:
    email: info@common-api.ch

  license:
    name: Apache 2.0
    identifier: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: https://pension.common-api.ch

externalDocs:
  description: Find out more about SFTI API specifications.
  url: https://www.common-api.ch

tags:
  - name: person
    description: Insured person.
  - name: statement
    description: Pension statement.
  - name: policy
    description: Pension fund policy.
  - name: plan
    description: Pension plan.
  - name: simulation
    description: Simulations of salary changes and voluntary purchases.
  - name: transactions
    description: Retirement capital transactions.
  - name: consents
    description: Consents.

security:
  - OAuth2:
      - read:basic_pension_data

paths:
  /insured-persons/{personId}:
    get:
      summary: Get details of an insured person
      description: >
        Provides the details of the insured person, including name, address and
        additional data relevant in the Swiss social security system (birth date, sex etc.)
      operationId: getInsuredPerson
      tags:
        - person
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            $ref: '#/components/schemas/PersonId'
          description: Technical person ID.
      security:
        - OAuth2:
            - read:basic_pension_data
      responses:
        '200':
          description: Details of insured person.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuredPerson'
        '401':
          $ref: '#/components/responses/standard401'
        '404':
          $ref: '#/components/responses/standard404'
        '500':
          $ref: '#/components/responses/standard500'

  /insured-persons/{personId}/statements:
    post:
      summary: Get pension statement(s) data
      description: >
        Provides the pension statement(s) representing the state of the policy/policies for the specified date as structured data.
        If no date is specified, the latest (regular/official) pension statement(s) associated with the insured person is retrieved.
        If a person has several policies (associated to different pension plans), either an aggregated statement is delivered or one
        statement per pension plan. This can vary depending on the pension fund.
        In the aggregated statement, the related pension plans are listed.

        If the pension fund is unable to provide a statement for the request date, the error
        code 400 should be returned.
      operationId: getPensionStatementsByDate
      tags:
        - statement
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            $ref: '#/components/schemas/PersonId'
          description: Technical person ID.
      requestBody:
        description: Reference date for information in output.
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceDate'
      security:
        - OAuth2:
            - read:basic_pension_data
      responses:
        '200':
          description: Statement details.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PensionStatement'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '404':
          $ref: '#/components/responses/standard404'
        '500':
          $ref: '#/components/responses/standard500'

  /statements/{pensionStatementId}/documents:
    get:
      summary: Get the pension statement document for the specified id
      description: >
        Provides the pension statement for the specified id as a PDF document
        in the insured person's preferred language.

        If the pension fund is unable to provide a document for the request id, the error
        code 400 should be returned.
      operationId: getPensionStatementDocument
      tags:
        - statement
      parameters:
        - in: path
          name: pensionStatementId
          required: true
          schema:
            $ref: '#/components/schemas/PensionStatementId'
          description: Technical pension statement ID.
      security:
        - OAuth2:
            - read:basic_pension_data
      responses:
        '200':
          description: Binary PDF data of the pension statement.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/standard401'
        '404':
          $ref: '#/components/responses/standard404'
        '500':
          $ref: '#/components/responses/standard500'

  /statements/{pensionStatementId}/compact-statements:
    get:
      summary: Get the compact pension statement for the specified id
      description: >
        Provides the pension statement for the specified id as a compact json
        in the insured person's preferred language. Its sole purpose is to provide
        a compact json for use cases with tight data volume limits such as e.g.
        a QR code. This endpoint should not be used otherwise.

        If the pension fund is unable to provide a json for the request id, the error
        code 400 should be returned.
      operationId: getPensionStatementCompact
      tags:
        - statement
      parameters:
        - in: path
          name: pensionStatementId
          required: true
          schema:
            $ref: '#/components/schemas/PensionStatementId'
          description: Technical pension statement ID.
      security:
        - OAuth2:
            - read:basic_pension_data
      responses:
        '200':
          description: Compact statement details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Psc'
        '401':
          $ref: '#/components/responses/standard401'
        '404':
          $ref: '#/components/responses/standard404'
        '500':
          $ref: '#/components/responses/standard500'

  /policies/{policyId}:
    get:
      summary: Get details of a pension fund policy
      description: >
        Provides details about the insurance policy including current retirement capital,
        prospective pension benefits for different retirement ages, contributions to financing the
        insurance etc.
      operationId: getPolicy
      tags:
        - policy
      parameters:
        - in: path
          name: policyId
          required: true
          schema:
            $ref: '#/components/schemas/PolicyId'
          description: Technical policy ID.
      security:
        - OAuth2:
            - read:basic_pension_data
      responses:
        '200':
          description: Policy details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '401':
          $ref: '#/components/responses/standard401'
        '404':
          $ref: '#/components/responses/standard404'
        '500':
          $ref: '#/components/responses/standard500'

  /plans/{planId}/description-documents:
    get:
      summary: Get insured person's pension plan description
      description: >
        Retrieves the pension plan description for a specific insured person and pension plan.

        This document provides a description of the insured person's pension plan, including
        covered benefits, contribution structure, and key conditions applicable under their employer’s pension scheme.

        If the specified pension plan description is not found for the insured person, a `404` error is returned.
      operationId: getPensionPlanDescriptionDocument
      tags:
        - plan
      parameters:
        - in: path
          name: planId
          required: true
          schema:
            $ref: '#/components/schemas/PlanId'
          description: Unique identifier of the pension plan.
      security:
        - OAuth2:
            - read:pension_plan
      responses:
        '200':
          description: Pension plan description document for the insured person in PDF format.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/standard401'
        '404':
          $ref: '#/components/responses/standard404'
        '500':
          $ref: '#/components/responses/standard500'

  /policies/{policyId}/salary-change-simulation:
    post:
      summary: Simulate effects of salary and employment level change
      description: >
        Simulates the effects of a salary and/or employment level change on
        personal pension details (e.g. retirement capital)
      operationId: simulateSalaryChange
      tags:
        - simulation
      parameters:
        - in: path
          name: policyId
          required: true
          schema:
            $ref: '#/components/schemas/PolicyId'
          description: Policy ID.
      security:
        - OAuth2:
            - read:basic_pension_data
      requestBody:
        description: Salary change simulation parameters.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryChangeSimParameters'
      responses:
        '200':
          description: Simulation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationResultPensionStatement'
        '401':
          $ref: '#/components/responses/standard401'
        '404':
          $ref: '#/components/responses/standard404'
        '500':
          $ref: '#/components/responses/standard500'

  /policies/{policyId}/purchase-simulation:
    post:
      summary: Simulate effects of voluntary purchase
      description: >
        Simulates the financial effect of voluntary purchase of additional pension benefits
        for the provided parameters (retirement age, purchase amount etc.)

        If the specified purchase amount is higher the maximum allowed purchase amount, it will
        be reduced to the allowed amount. The simulation result contains the effective purchase amount.

        For periodic payments, the simulation assumes that the payments are made with the specified
        payment size and payment frequency until the maximum purchase amount has been exhausted or
        the retirement date has been reached (whichever is first).

        If the retirement date is reached before the purchase amount is exhausted, the returned effective
        purchase amount will be lower than both the requested and the maximum purchase amount.

        Using a very high amount (e.g. CHF 10 million), it is possible to query the maximum purchase
        amount and the maximum additional pension at once.
      operationId: simulatePurchase
      tags:
        - simulation
      parameters:
        - in: path
          name: policyId
          required: true
          schema:
            $ref: '#/components/schemas/PolicyId'
          description: Policy ID.
      security:
        - OAuth2:
            - read:basic_pension_data
      requestBody:
        description: Voluntary purchase simulation parameters.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseSimParameters'
      responses:
        '200':
          description: Simulation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationResultPensionStatement'
        '401':
          $ref: '#/components/responses/standard401'
        '404':
          $ref: '#/components/responses/standard404'
        '500':
          $ref: '#/components/responses/standard500'

  /policies/{policyId}/transactions:
    get:
      summary: Get the retirement capital transactions
      description: >
        Retrieves all transactions affecting the policy's retirement capital in the specified
        date range.

        The resulting transaction list is sorted in chronological order, starting with the oldest
        transaction. If several transactions occurred on the same date, they are ordered such that
        adding the transaction amount to the previous transactions balance results in the balance
        provided by the current transaction.

        The first transaction in the list is a pseudo transaction providing the carryover balance
        from the previous period. It is the only transaction with the category `carryover`.

        The `from` date must be before or be equal to the `to` date.

        The result contains a date range as well. It is usually equal to the request date range.
        However, if the requested `from` date is before the start of the policy or if the
        request `to` date is in the future, the date range may be adjusted to reflect the
        effective date range.
      operationId: getRetirementCapitalTransactions
      tags:
        - transactions
      parameters:
        - in: path
          name: policyId
          required: true
          schema:
            $ref: '#/components/schemas/PolicyId'
          description: Technical policy ID.
        - in: query
          name: from
          required: true
          schema:
            $ref: '#/components/schemas/Date'
          description: Start of date range (inclusive).
        - in: query
          name: to
          required: true
          schema:
            $ref: '#/components/schemas/Date'
          description: End of date range (inclusive).
      security:
        - OAuth2:
            - read:basic_pension_data
      responses:
        '200':
          description: Retirement capital transactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '404':
          $ref: '#/components/responses/standard404'
        '500':
          $ref: '#/components/responses/standard500'

  /consents:
    get:
      summary: Retrieve a list of consents
      description: >
        The consents endpoint allows the client (e.g., a third party provider)
        to query the consents for a user. The provider (e.g., a pension provider)
        must return the consents linked with the access token supplied with the request.
      operationId: retrieveConsents
      tags:
        - consents
      security:
        - OAuth2: []  # No scopes required
      responses:
        '200':
          description: List of consents.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsentItem'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '404':
          $ref: '#/components/responses/standard404'
        '500':
          $ref: '#/components/responses/standard500'

components:
  schemas:
    ConsentItem:
      type: object
      description: Information about a single consent, including the person ID and the allowed scopes.
      required:
        - personId
        - scopes
      properties:
        personId:
          $ref: '#/components/schemas/PersonId'
        scopes:
          type: array
          items:
            type: string
            enum:
              - read:basic_pension_data
              - read:pension_plan
          description: List of granted scopes for this specific person.
          example:
            - read:basic_pension_data
            - read:pension_plan

    InsuredPerson:
      type: object
      description: Details of insured person.
      required:
        - personId
        - lastName
        - firstName
        - birthDate
        - sex
        - maritalStatus
        - ssn
      properties:
        personId:
          $ref: '#/components/schemas/PersonId'
        lastName:
          type: string
          description: Last name / family name.
          examples:
            - Doe
        firstName:
          type: string
          description: First name(s).
          examples:
            - John
        address:
          $ref: '#/components/schemas/Address'
        birthDate:
          $ref: '#/components/schemas/Date'
          description: Birth date.
        sex:
          type: string
          enum:
            - male
            - female
          description: |
            Sex:
            * `male`: male
            * `female`: female
          examples:
            - male
        maritalStatus:
          type: string
          enum:
            - single
            - married
            - divorced
            - widowed
            - registeredPartnership
            - dissolvedRegisteredPartnership
            - unknown
          description: |
            Marital status:
            * `single`: single
            * `married`: married
            * `divorced`: divorced
            * `widowed`: widowed
            * `registeredPartnership`: living in a registered partnership
            * `dissolvedRegisteredPartnership`: registered partnership has been dissolved
            * `unknown`: marital status is not known
          examples:
            - married
        marriageDate:
          $ref: '#/components/schemas/Date'
          description: Date of marriage (or registration of partnership).
        ssn:
          type: integer
          format: int64
          description: Social security number.
          examples:
            - 7561234567890
        policyIds:
          type: array
          items:
            $ref: '#/components/schemas/PolicyId'
          description: List of IDs of policies that insured person has with this pension fund.

    Address:
      type: object
      description: Postal/residence address.
      required:
        - street
        - town
        - postalCode
        - countryCode
      properties:
        street:
          $ref: '#/components/schemas/Street'
        poBox:
          $ref: '#/components/schemas/PoBox'
        town:
          $ref: '#/components/schemas/Town'
        postalCode:
          $ref: '#/components/schemas/PostalCode'
        countryCode:
          $ref: '#/components/schemas/CountryCode'

    Street:
      type: string
      description: Street and house number.
      examples:
        - Brandstrasse 2

    PoBox:
      type: string
      description: PO box.
      examples:
        - PO Box 42

    Town:
      type: string
      description: Town.
      examples:
        - Unterbäch

    PostalCode:
      type: string
      description: Postal code.
      examples:
        - '3944'

    CountryCode:
      type: string
      pattern: '^[A-Z]{2}$'
      description: ISO country code.
      examples:
        - CH

    PensionProvider:
      type: object
      description: Pension provider (foundation) administering the policy.
      required:
        - providerName
      properties:
        providerId:
          $ref: '#/components/schemas/ProviderId'
        providerName:
          $ref: '#/components/schemas/ProviderName'
        providerAddress:
          $ref: '#/components/schemas/Address'
          description: Postal address of the pension provider.
        portalUrl:
          $ref: '#/components/schemas/PortalUrl'
        portalName:
          $ref: '#/components/schemas/PortalName'

    Employer:
      type: object
      description: Details of the insured person's employer.
      required:
        - employerName
      properties:
        employerId:
          $ref: '#/components/schemas/EmployerId'
        employerName:
          $ref: '#/components/schemas/EmployerName'
        industry:
          $ref: '#/components/schemas/Industry'

    PensionStatement:
      type: object
      description: >
        Pension statement consisting of the basic pension statement information,
        including aggregated personal pension data across related policies.
      required:
        - timeStamp
        - personId
        - employer
        - pensionProvider
        - referenceDate
        - pensionStatementType
        - pensionPlans
        - personalPensionDetails
      properties:
        pensionStatementId:
          $ref: '#/components/schemas/PensionStatementId'
        timeStamp:
          $ref: '#/components/schemas/DateTime'
          description: Date and time of generation of the PensionStatement
        personId:
          $ref: '#/components/schemas/PersonId'
        employer:
          $ref: '#/components/schemas/Employer'
        pensionProvider:
          $ref: '#/components/schemas/PensionProvider'
        pensionStatementNo:
          $ref: '#/components/schemas/PensionStatementNo'
        referenceDate:
          $ref: '#/components/schemas/Date'
          description: Reference date of pension statement.
        pensionStatementType:
          $ref: '#/components/schemas/PensionStatementType'
        pensionPlans:
          type: array
          description: List of related pension plans.
          items:
            $ref: '#/components/schemas/PensionPlan'
        personalPensionDetails:
          $ref: '#/components/schemas/PersonalPensionDetails'

    Psc:
      type: object
      description: >
        Psc = pension statement compact, is a reduced pension statement
        consisting of only the most important pension statement information.
      required:
        - ts
        - pi
        - en
        - ppn
        - rd
        - pst
        - ppl
        - ora
        - era
        - sd
        - rc
        - rb
        - rpm
        - hoaw
      properties:
        ts:
          $ref: '#/components/schemas/DateTime'
          description: Date and time of generation of the PensionStatement
        pi:
          $ref: '#/components/schemas/PersonId'
        en:
          $ref: '#/components/schemas/EmployerName'
        ppn:
          $ref: '#/components/schemas/ProviderName'
        rd:
          $ref: '#/components/schemas/Date'
          description: Reference date of pension statement.
        pst:
          $ref: '#/components/schemas/PensionStatementType'
        ppl:
          type: object
          description: >
            The pension plan defines various conditions for the occupational pension provision
            of the insured employees, incl. the contributions and insured benefits.
          required:
            - pln
            - ct
          properties:
            pln:
              $ref: '#/components/schemas/PlanName'
            ct:
              $ref: '#/components/schemas/ContractType'
        ora:
          type: integer
          format: int32
          description: Age (in month since birth) for ordinary retirement.
          examples:
            - 780
        era:
          type: integer
          format: int32
          description: Age (in month since birth) for earliest possible retirement.
          examples:
            - 696
        sd:
          type: object
          description: Details of salary relevant for insurance.
          required:
            - ds
            - ism
            - isre
            - isri
            - el
          properties:
            ds:
              $ref: '#/components/schemas/DeclaredSalary'
            ism:
              $ref: '#/components/schemas/InsuredSalaryMandatory'
            isre:
              $ref: '#/components/schemas/InsuredSalaryRetirement'
            isri:
              $ref: '#/components/schemas/InsuredSalaryRisk'
            el:
              $ref: '#/components/schemas/EmploymentLevel'
        rc:
          type: object
          description: Retirement capital balances for the past and projections for the future.
          required:
            - brd
            - bmr
            - prb
          properties:
            brd:
              $ref: '#/components/schemas/BalanceReferenceDate'
            bmr:
              $ref: '#/components/schemas/BalanceMandatoryReferenceDate'
            prb:
              type: array
              description: >
                Projected retirement benefits for a series of retirement ages.
                The list contains projections for each integer retirement age from 58 to the
                regular retirement age. For persons of 58 or older, the list is restricted
                to retirement ages higher than their current age.
              items:
                type: object
                required:
                  - ra
                  - cb
                  - p
                properties:
                  ra:
                    $ref: '#/components/schemas/RetirementAge'
                  cb:
                    $ref: '#/components/schemas/CapitalBalance'
                  p:
                    $ref: '#/components/schemas/Pension'
        rb:
          type: object
          description: Benefits in case of death or disability to work.
          required:
            - pd
            - cpd
            - ppd
            - opd
            - mlswpb
          properties:
            pd:
              $ref: '#/components/schemas/PensionDisability'
            cpd:
              $ref: '#/components/schemas/ChildPensionDisability'
            ppd:
              $ref: '#/components/schemas/PartnerPensionDeath'
            opd:
              $ref: '#/components/schemas/OrphanPensionDeath'
            mlswpb:
              $ref: '#/components/schemas/MinimalLumpSumWithPensionBenefits'
        rpm:
          $ref: '#/components/schemas/RegularPurchaseMaxAmount'
        hoaw:
          $ref: '#/components/schemas/HomeOwnershipAvailableForWithdrawal'

    Policy:
      type: object
      description: Details of policy.
      required:
        - policyId
        - personId
        - pensionProvider
        - referenceDate
        - policyNo
        - pensionPlan
        - entryDate
        - contractNo
        - personalPensionDetails
      properties:
        policyId:
          $ref: '#/components/schemas/PolicyId'
        personId:
          $ref: '#/components/schemas/PersonId'
        employer:
          $ref: '#/components/schemas/Employer'
        pensionProvider:
          $ref: '#/components/schemas/PensionProvider'
        referenceDate:
          $ref: '#/components/schemas/Date'
          description: Reference date of the personal pension details.
        policyNo:
          type: string
          description: Policy number (as printed on policy statements).
          examples:
            - 392'485'482
        pensionPlan:
          $ref: '#/components/schemas/PensionPlan'
        entryDate:
          $ref: '#/components/schemas/Date'
          description: Entry date into the pension plan.
        contractNo:
          type: string
          description: Contract number of contract between employer and pension fund.
          examples:
            - C27-842.183
        personalPensionDetails:
          $ref: '#/components/schemas/PersonalPensionDetails'
        isInVestedBenefitFoundation:
          type: boolean
          description: >
            Indicates if policy is part of a vested benefit foundation (as opposed to
            a regular pension fund with payments from an employer). If the field is not
            set, a regular pension fund is assumed.
          examples:
            - false

    PersonalPensionDetails:
      type: object
      description: >
        Shared pension-related data specific to the insured person. This data structure is used in policies and pension statements
        to represent key attributes like salary, capital and benefits.
      required:
        - ordinaryRetirementAge
        - earliestRetirementAge
        - salaryData
        - retirementCapital
        - riskBenefits
        - financing
        - regularPurchaseMaxAmount
        - homeOwnershipAvailableForWithdrawal
      properties:
        ordinaryRetirementAge:
          type: integer
          format: int32
          description: Age (in month since birth) for ordinary retirement.
          examples:
            - 780
        earliestRetirementAge:
          type: integer
          format: int32
          description: Age (in month since birth) for earliest possible retirement.
          examples:
            - 696
        salaryData:
          $ref: '#/components/schemas/SalaryData'
        retirementCapital:
          $ref: '#/components/schemas/RetirementCapital'
        riskBenefits:
          $ref: '#/components/schemas/RiskBenefits'
        financing:
          $ref: '#/components/schemas/Financing'
        regularPurchaseMaxAmount:
          $ref: '#/components/schemas/RegularPurchaseMaxAmount'
        homeOwnershipAvailableForWithdrawal:
          $ref: '#/components/schemas/HomeOwnershipAvailableForWithdrawal'
        homeOwnershipAvailableForPledge:
          $ref: '#/components/schemas/HomeOwnershipAvailableForPledge'
        vestedBenefits:
          $ref: '#/components/schemas/VestedBenefits'

    PensionPlan:
      type: object
      description: >
        The pension plan defines various conditions for the occupational pension provision
        of the insured employees, incl. the contributions and insured benefits.
      required:
        - planName
        - contractType
      properties:
        planId:
          $ref: '#/components/schemas/PlanId'
        planName:
          $ref: '#/components/schemas/PlanName'
        contractType:
          $ref: '#/components/schemas/ContractType'
        optionalSavingsPlanName:
          type: string
          description: Name of the optional savings plan.
          examples:
            - Sparplan 2

    PlanId:
      type: string
      pattern: '^[A-Za-z0-9_\-.~]{1,64}$'
      description: Technical ID of pension plan used in API calls.
      examples:
        - Plan_XY4284_425

    PlanName:
      type: string
      description: Insurance plan name.
      examples:
        - Basisplan

    ContractType:
      type: string
      description: |
        The contract type of the pension plan, represented by a string identifier.
        Allowed values are:
        - `mand`: Mandatory BVG contract.
        - `suppl`: Supplementary pension plan.
        - `earlyRet`: Plan for early retirement.
        - `bridge`: Bridge pension plan.
        - `1e`: 1e pension plan.
        - `other`: Other contract type not covered by the predefined categories.
      enum:
        - mand
        - suppl
        - earlyRet
        - bridge
        - 1e
        - other
      example: mand

    SalaryData:
      type: object
      description: Details of salary relevant for insurance.
      required:
        - declaredSalary
        - insuredSalaryMandatory
        - insuredSalaryRetirement
        - insuredSalaryRisk
        - employmentLevel
      properties:
        declaredSalary:
          $ref: '#/components/schemas/DeclaredSalary'
        bonus:
          $ref: '#/components/schemas/Bonus'
        additionalSalary:
          $ref: '#/components/schemas/AdditionalSalary'
        otherSalaryComponent:
          $ref: '#/components/schemas/OtherSalaryComponent'
        insuredSalaryMandatory:
          $ref: '#/components/schemas/InsuredSalaryMandatory'
        insuredSalaryRetirement:
          $ref: '#/components/schemas/InsuredSalaryRetirement'
        insuredSalaryRisk:
          $ref: '#/components/schemas/InsuredSalaryRisk'
        employmentLevel:
          $ref: '#/components/schemas/EmploymentLevel'

    DeclaredSalary:
      type: number
      format: double
      description: Gross annual salary.
      examples:
        - 78000.00

    Bonus:
      type: number
      format: double
      description: Bonus component of the salary.
      examples:
        - 0.00

    AdditionalSalary:
      type: number
      format: double
      description: Additional salary component.
      examples:
        - 0.00

    OtherSalaryComponent:
      type: number
      format: double
      description: Other salary component.
      examples:
        - 0.00

    InsuredSalaryMandatory:
      type: number
      format: double
      description: Annual salary insured under mandatory coverage.
      examples:
        - 59215.00

    InsuredSalaryRetirement:
      type: number
      format: double
      description: Annual salary insured for retirement benefits (mandatory and supplementary coverage).
      examples:
        - 59215.00

    InsuredSalaryRisk:
      type: number
      format: double
      description: Annual salary insured for risk benefits (mandatory and supplementary coverage).
      examples:
        - 59215.00

    EmploymentLevel:
      type: number
      format: double
      description: Level of full-time/part-time employment (in percent, 100 for full-time employment).
      examples:
        - 100

    RetirementCapital:
      type: object
      description: Retirement capital balances for the past and projections for the future.
      required:
        - balanceReferenceDate
        - balanceMandatoryReferenceDate
        - projectedRetirementBenefits
        - interestRates
      properties:
        transferredCapital:
          $ref: '#/components/schemas/TransferredCapital'
        transferredCapitalMandatory:
          $ref: '#/components/schemas/TransferredCapitalMandatory'
        balanceReferenceDate:
          $ref: '#/components/schemas/BalanceReferenceDate'
        balanceMandatoryReferenceDate:
          $ref: '#/components/schemas/BalanceMandatoryReferenceDate'
        balanceEndCurrentYear:
          $ref: '#/components/schemas/BalanceEndCurrentYear'
        balanceMandatoryEndCurrentYear:
          $ref: '#/components/schemas/BalanceMandatoryEndCurrentYear'
        projectedRetirementBenefits:
          type: array
          description: >
            Projected retirement benefits for a series of retirement ages.
            The list contains projections for each integer retirement age from 58 to the
            regular retirement age. For persons of 58 or older, the list is restricted
            to retirement ages higher than their current age.
          items:
            $ref: '#/components/schemas/RetirementBenefits'
        interestRates:
          $ref: '#/components/schemas/InterestRates'
        lastYearDevelopment:
          $ref: '#/components/schemas/LastYearDevelopment'

    TransferredCapital:
      type: number
      format: double
      description: Total retirement capital (mandatory and supplementary coverage) brought from other funds into this fund.
      examples:
        - 45210.25

    TransferredCapitalMandatory:
      type: number
      format: double
      description: Retirement capital under mandatory coverage brought from other funds into this fund.
      examples:
        - 32840.55

    BalanceReferenceDate:
      type: number
      format: double
      description: Retirement capital as per a specified reference date (mandatory and supplementary coverage).
      examples:
        - 53842.50

    BalanceMandatoryReferenceDate:
      type: number
      format: double
      description: Retirement capital under mandatory coverage as per a specified reference date.
      examples:
        - 38942.15

    BalanceEndCurrentYear:
      type: number
      format: double
      description: Projected retirement capital as per end of the current year (mandatory and supplementary coverage).
      examples:
        - 56325.25

    BalanceMandatoryEndCurrentYear:
      format: double
      type: number
      description: Projected retirement capital under mandatory coverage as per end of the current year.
      examples:
        - 40846.60

    LastYearDevelopment:
      type: object
      description: >
        Details about the capital development for the last year.
      required:
        - balanceBeginningLastYear
        - totalDepositsLastYear
        - totalWithdrawalsLastYear
        - oldAgeCreditLastYear
        - interestCreditLastYear
        - balanceEndLastYear
        - interestRatesLastYear
      properties:
        balanceBeginningLastYear:
          type: number
          format: double
          description: >
            The capital balance at the beginning of the last year.
          example: 100000.00
        totalDepositsLastYear:
          type: number
          format: double
          description: >
            Total deposits made during the last year.
          example: 5000.00
        totalWithdrawalsLastYear:
          type: number
          format: double
          description: >
            Total withdrawals made during the last year.
          example: 5000.00
        oldAgeCreditLastYear:
          type: number
          format: double
          description: >
            Old age credits added during the last year.
          example: 4000.00
        interestCreditLastYear:
          type: number
          format: double
          description: >
            Interest credits added during the last year.
          example: 2000.00
        balanceEndLastYear:
          type: number
          format: double
          description: >
            The capital balance at the end of the last year.
          example: 106000.00
        interestRatesLastYear:
          $ref: '#/components/schemas/InterestRates'

    RetirementBenefits:
      type: object
      description: >
        Retirement benefits for retirement at the specified age.
        The conversion rate is mandatory: either the pair for mandatory and supplementary
        coverage is provided, or the enveloping conversion rate.
      required:
        - retirementAge
        - capitalBalance
        - capitalBalanceMandatory
        - pension
      properties:
        retirementAge:
          $ref: '#/components/schemas/RetirementAge'
        capitalBalance:
          $ref: '#/components/schemas/CapitalBalance'
        capitalBalanceMandatory:
          $ref: '#/components/schemas/CapitalBalanceMandatory'
        capitalBalanceNoInterest:
          $ref: '#/components/schemas/CapitalBalanceNoInterest'
        capitalBalanceNoInterestMandatory:
          $ref: '#/components/schemas/CapitalBalanceNoInterestMandatory'
        pension:
          $ref: '#/components/schemas/Pension'
        conversionRateMandatory:
          $ref: '#/components/schemas/ConversionRateMandatory'
        conversionRateSupplementary:
          $ref: '#/components/schemas/ConversionRateSupplementary'
        conversionRateEnveloping:
          $ref: '#/components/schemas/ConversionRateEnveloping'

    RetirementAge:
      type: integer
      format: int32
      description: Specified age (in month since birth) used for the retirement benefits calculation.
      examples:
        - 756

    CapitalBalance:
      type: number
      format: double
      description: Retirement capital balance with interest (mandatory and supplementary coverage).
      examples:
        - 378832.05

    CapitalBalanceMandatory:
      type: number
      format: double
      description: Retirement capital balance with interest (mandatory coverage only).
      examples:
        - 284832.15

    CapitalBalanceNoInterest:
      type: number
      format: double
      description: >
        Retirement capital balance assuming no interest on assets (mandatory
        and supplementary coverage)
      examples:
        - 331285.25

    CapitalBalanceNoInterestMandatory:
      type: number
      format: double
      description: >
        Retirement capital balance assuming no interest on assets (mandatory coverage only)
      examples:
        - 248862.65

    Pension:
      type: number
      format: double
      description: Annual pension credit.
      examples:
        - 22835.00

    ConversionRateMandatory:
      type: number
      format: double
      description: Conversion rate (capital to pension) for mandatory coverage.
      examples:
        - 6.800

    ConversionRateSupplementary:
      type: number
      format: double
      description: Conversion rate (capital to pension) for supplementary coverage.
      examples:
        - 5.500

    ConversionRateEnveloping:
      type: number
      format: double
      description: >
        Enveloping conversion rate (capital to pension) for combined mandatory and
        supplementary coverage
      examples:
        - 6.300

    InterestRates:
      type: object
      description: >
        A set of interest rates applicable/applied to the retirement capital, including
        actual rates for mandatory and supplementary coverage. Rates for saving/purchase
        and projection rates for future value calculations.
      minProperties: 1  # Requires at least one property (specific interest rate) to be present.
      additionalProperties: false  # Only allow properties defined in 'properties' below.
      properties:
        interestRateMandatorySaving:
          $ref: '#/components/schemas/InterestRate'
          description: Saving interest rate for mandatory coverage (in percent).
          examples:
            - 6.800
        interestRateSupplementarySaving:
          $ref: '#/components/schemas/InterestRate'
          description: Saving interest rate for supplementary coverage (in percent).
          examples:
            - 5.500
        interestRateEnvelopingSaving:
          $ref: '#/components/schemas/InterestRate'
          description: Saving enveloping interest rate for combined mandatory and supplementary coverage (in percent).
          examples:
            - 6.300
        interestRateMandatoryPurchase:
          $ref: '#/components/schemas/InterestRate'
          description: Interest rate for mandatory coverage (in percent), used specifically in purchase calculations.
          examples:
            - 6.800
        interestRateSupplementaryPurchase:
          $ref: '#/components/schemas/InterestRate'
          description: Interest rate for supplementary coverage (in percent), used specifically in purchase calculations.
          examples:
            - 5.500
        interestRateEnvelopingPurchase:
          $ref: '#/components/schemas/InterestRate'
          description: >
            Enveloping interest rate for combined mandatory and supplementary coverage (in percent),
            used specifically in purchase calculations.
          examples:
            - 6.300
        interestRateMandatoryProjection:
          $ref: '#/components/schemas/InterestRate'
          description: >
            Projection rate for mandatory coverage (in percent),
            used specifically for calculating projected future values.
          examples:
            - 6.800
        interestRateSupplementaryProjection:
          $ref: '#/components/schemas/InterestRate'
          description: >
            Projection rate for supplementary coverage (in percent),
            used specifically for calculating projected future values.
          examples:
            - 5.500
        interestRateEnvelopingProjection:
          $ref: '#/components/schemas/InterestRate'
          description: >
            Projection enveloping interest rate for combined mandatory and supplementary coverage (in percent),
            used specifically for calculating projected future values.
          examples:
            - 6.300

    RiskBenefits:
      type: object
      description: Benefits in case of death or disability to work.
      required:
        - pensionDisability
        - childPensionDisability
        - partnerPensionDeath
        - orphanPensionDeath
        - lumpSumWithoutPensionBenefits
        - minimalLumpSumWithPensionBenefits
      properties:
        pensionDisability:
          $ref: '#/components/schemas/PensionDisability'
        childPensionDisability:
          $ref: '#/components/schemas/ChildPensionDisability'
        partnerPensionDeath:
          $ref: '#/components/schemas/PartnerPensionDeath'
        orphanPensionDeath:
          $ref: '#/components/schemas/OrphanPensionDeath'
        lumpSumWithoutPensionBenefits:
          $ref: '#/components/schemas/LumpSumWithoutPensionBenefits'
        minimalLumpSumWithPensionBenefits:
          $ref: '#/components/schemas/MinimalLumpSumWithPensionBenefits'

    PensionDisability:
      type: number
      format: double
      description: Annual pension in case of disability.
      examples:
        - 40213.00

    ChildPensionDisability:
      type: number
      format: double
      description: Annual child pension in case of disability.
      examples:
        - 5382.00

    PartnerPensionDeath:
      type: number
      format: double
      description: Annual partner pension in case of death.
      examples:
        - 24817.00

    OrphanPensionDeath:
      type: number
      format: double
      description: Annual orphan pension in case of death.
      examples:
        - 5382.00

    LumpSumWithoutPensionBenefits:
      type: number
      format: double
      description: >
        A one-off lump sum payment in the event of death, provided no other recurring survivor benefits are paid.
        This applies when there is no entitlement to a partner’s pension, orphan’s pension, or any other ongoing survivor benefits.
        The amount typically corresponds to the insured person’s accrued retirement savings as defined by the pension plan.
      examples:
        - 92834.00

    MinimalLumpSumWithPensionBenefits:
      type: number
      format: double
      description: |
        A guaranteed minimum one-off lump sum payment in the event of death, which is paid in addition to other pension benefits
        (e.g., a partner’s pension, orphan’s pension, or other recurring survivor benefits).

        This amount can include:
        - Voluntary additional contributions (Einkäufe) made by the insured person.
        - Other supplementary pension capital as defined by the pension plan regulations.
        For example, in some cases, the full accrued retirement savings may be paid in addition to ongoing pension benefits.

        The exact composition and amount of this lump sum depend on the pension plan’s rules and the insured person’s specific situation.
      examples:
        - 74383.00

    Financing:
      type: object
      description: Contributions for financing the policy.
      required:
        - contributionSavingsInsuredPerson
        - contributionSavingsEmployer
      properties:
        contributionSavingsInsuredPerson:
          $ref: '#/components/schemas/ContributionSavingsInsuredPerson'
        contributionSavingsEmployer:
          $ref: '#/components/schemas/ContributionSavingsEmployer'
        contributionRiskInsuredPerson:
          $ref: '#/components/schemas/ContributionRiskInsuredPerson'
        contributionRiskEmployer:
          $ref: '#/components/schemas/ContributionRiskEmployer'
        contributionAdministrationInsuredPerson:
          $ref: '#/components/schemas/ContributionAdministrationInsuredPerson'
        contributionAdministrationEmployer:
          $ref: '#/components/schemas/ContributionAdministrationEmployer'

    ContributionSavingsInsuredPerson:
      type: number
      format: double
      description: Annual contribution towards the retirement captial financed by the insured person.
      examples:
        - 4025.00

    ContributionSavingsEmployer:
      type: number
      format: double
      description: Annual contribution towards the retirement captial financed by the employer.
      examples:
        - 4025.00

    ContributionRiskInsuredPerson:
      type: number
      format: double
      description: Annual contribution towards risk benefits financed by the insured person.
      examples:
        - 0.00

    ContributionRiskEmployer:
      type: number
      format: double
      description: Annual contribution towards risk benefits financed by the employer.
      examples:
        - 0.00

    ContributionAdministrationInsuredPerson:
      type: number
      format: double
      description: Annual contribution towards fund administration financed by the insured person.
      examples:
        - 0.00

    ContributionAdministrationEmployer:
      type: number
      format: double
      description: Annual contribution towards fund administration financed by the employer.
      examples:
        - 0.00

    VestedBenefits:
      type: object
      description: >
        The VestedBenefits object provides detailed information about the insured person's accrued retirement capital
        under occupational pension plans (2nd pillar). It includes key data such as retirement capital at significant
        milestones (e.g., age 50, marriage), and records of transactions like voluntary purchases, withdrawals for home
        ownership (WEF), or adjustments due to divorce. This information is essential for managing entitlements and
        processing pension transfers.
      properties:
        referenceDate:
          $ref: '#/components/schemas/Date'
          description: Reference date of the vested benefit information.
        capitalAt50:
          type: number
          format: double
          description: >
            The insured person's retirement capital when he/she was 50 (mandatory and supplementary).
            Empty for persons younger than 50.
          examples:
            - 0.00
        capitalAt50Mandatory:
          type: number
          format: double
          description: >
            The insured person's retirement capital when he/she was 50 (mandatory part only).
            Empty for persons younger than 50.
          examples:
            - 0.00
        capitalAtMarriage:
          type: number
          format: double
          description: >
            The insured person's retirement capital before he/she got married or entered
            a registered partnership (mandatory and supplementary). Relevant is the last
            marriage or registered partnership (the marriage/partnership date is part of
            the insured person object.)

            Empty for persons who are not married or in a registered partnership.
          examples:
            - 28483.35
        capitalAtMarriageMandatory:
          type: number
          format: double
          description: >
            The insured person's retirement capital before he/she got married or entered
            a registered partnership (mandatory part only). Relevant is the last
            marriage or registered partnership (the marriage/partnership date is part of
            the insured person object.)

            Empty for persons who are not married or in a registered partnership.
          examples:
            - 23863.15
        capitalFirstCommunicated:
          type: number
          format: double
          description: >
            Vested benefit capital that has been initially communicated or had become due
            after January 1, 1995 (for insured persons having married before January 1, 1995).
          examples:
            - 0.00
        capitalFirstCommunicatedDate:
          $ref: '#/components/schemas/Date'
          description: >
            Date when vested benefit capital has been initially communicated or had become due
            after January 1, 1995 (for insured persons having married before January 1, 1995).
        voluntaryPurchases:
          type: array
          items:
            $ref: '#/components/schemas/CapitalTransaction'
          description: >
            List of voluntary purchases of additional pension benefits made in the past.
            At least the purchases of the last 3 years must be included. They can be
            aggregated by calendar year.
        homeOwnerhsipWithdrawals:
          type: array
          items:
            $ref: '#/components/schemas/CapitalTransaction'
          description: >
            List of withdrawls and refunds for home ownership promotion made in the past.
        divorceWithdrawals:
          type: array
          items:
            $ref: '#/components/schemas/CapitalTransaction'
          description: >
            List of withdrawls and refunds due to divorce made in the past.
        pledges:
          type: array
          items:
            $ref: '#/components/schemas/Pledge'
          description: >
            List of pledges of parts of the retirement capital.

    CapitalTransaction:
      type: object
      description: >
        Capital transaction made by the insured persons. It includes volunatry purchases,
        withdrawals for and refunds of home ownerhsip promotion, withdrawals or refunds due to divorce.
      required:
        - date
        - amount
      properties:
        date:
          $ref: '#/components/schemas/Date'
          description: Date of transaction
        amount:
          type: number
          format: double
          description: >
            Total transaction amount for mandatory and supplementary part.
            The amount is positive for payments towards the capital, and negative for withdrawals.
          examples:
            - 0.00
        amountMandatory:
          type: number
          format: double
          description: >
            Transaction amount for mandatory part only.
            The amount is positive for payments towards the capital, and negative for withdrawals.
          examples:
            - 0.00

    RegularPurchaseMaxAmount:
      type: number
      format: double
      description: >
        The maximum amount the insured person is permitted to contribute to their pension plan
        as an ordinary purchase.
      examples:
        - 48392.45

    HomeOwnershipAvailableForWithdrawal:
      type: number
      format: double
      description: >
        The total amount available for the insured person to withdraw from their retirement capital
        for the purpose of financing home ownership.
      examples:
        - 31000.00

    HomeOwnershipAvailableForPledge:
      type: number
      format: double
      description: >
        The total amount available for the insured person to pledge as collateral from their retirement capital
        for the purpose of financing home ownership.

        Note: If a fixed amount is contractually defined, it is usually lower than this value.
      examples:
        - 50000.00

    Pledge:
      type: object
      description: >
        Details about pledged capital.
      properties:
        amount:
          type: number
          format: double
          description: >
            Amount of retirement capital used for pledging (mandatory and supplementary).
          examples:
            - 20000.00
        amountMandatory:
          type: number
          format: double
          description: >
            Amount of retirement capital used for pledging (mandatory part only).
          examples:
            - 20000.00
        pledgee:
          type: string
          description: The name of the pledgee.
          examples:
            - UBS AG
        pledgeeAddress:
          $ref: '#/components/schemas/Address'

    ReferenceDate:
      type: object
      description: Reference date for information in generated document.
      required:
        - referenceDate
      properties:
        referenceDate:
          $ref: '#/components/schemas/Date'

    PersonId:
      type: string
      pattern: '^[A-Za-z0-9_\-.~]{1,64}$'
      description: Technical ID of insured person used in API calls.
      examples:
        - JohnDoe_1234

    ProviderId:
      type: string
      description: Swiss Enterprise Identification Number UID.
      examples:
        - CHE123456789

    ProviderName:
      type: string
      description: The name of the pension provider.
      examples:
        - Omnifund

    PortalUrl:
      type: string
      description: URL of the insurance portal of the pension fund.
      examples:
        - www.omnifund.ch

    PortalName:
      type: string
      description: Offical name of the insurance portal.
      examples:
        - Omni Portal

    EmployerId:
      type: string
      description: Swiss Enterprise Identification Number UID.
      examples:
        - CHE115873291

    EmployerName:
      type: string
      description: The name of the employer.
      examples:
        - Acrea AG

    Industry:
      type: string
      description: The industry or sector the employer operates in.
      examples:
        - information technology and management consulting

    PolicyId:
      type: string
      pattern: '^[A-Za-z0-9_\-.~]{1,64}$'
      description: Technical ID of policy used in API calls.
      examples:
        - Pol_56789-2024

    PensionStatementId:
      type: string
      pattern: '^[A-Za-z0-9_\-.~]{1,64}$'
      description: Technical ID of pension statement used in API calls.
      examples:
        - 550e8450-e59b-21d4-a346-442215440560

    PensionStatementNo:
      type: string
      description: Pension statement number (as printed on statement).
      examples:
        - PS_ID_6789-ABC

    PensionStatementType:
      type: string
      enum:
        - regular
        - simulated
      description: |
        pension statement type:
        * `regular`: the pension statement is an offical, regular statement on the basis of real values (not changed for simulation purposes)
        * `simulated`: the pension statement is a non-offical, simulated statement, i.e. some values might have been changed for simulation purposes
      examples:
        - regular

    SalaryChangeSimParameters:
      type: object
      description: Salary change simulation parameters.
      required:
        - declaredSalary
        - employmentLevel
      properties:
        declaredSalary:
          type: number
          format: double
          description: Changed gross annual salary in CHF (for employment level 100%).
          examples:
            - 80000
        employmentLevel:
          type: number
          format: double
          description: Changed level of full-time/part-time employment (in percent, 100 for full-time employment).
          examples:
            - 80
        effectiveDate:
          $ref: '#/components/schemas/Date'
          description: >
            Date when the salary change takes effect.
            If omitted: tomorrow.

    SimulationResultPensionStatement:
      type: object
      description: Financial effect of simulation.
      required:
        - pensionStatementBeforeChange
        - pensionStatementAfterChange
      properties:
        pensionStatementBeforeChange:
          $ref: '#/components/schemas/PensionStatement'
          description: Provides the pension statement before the change (referenceDate = today)
        pensionStatementAfterChange:
          $ref: '#/components/schemas/PensionStatement'
          description: |
            Provides the pension statement after the change
            In case of salaray change: referenceDate = tomorrow OR effectiveDate, if specified as API parameter
            In case of purchase: referenceData = day after the (last) payment

    PurchaseSimParameters:
      type: object
      description: Voluntary purchase simulation parameters.
      required:
        - totalAmount
      properties:
        totalAmount:
          type: number
          description: >
            Purchase amount in CHF.
            For periodic purchases, the sum of all payments.
          examples:
            - 10000.00
        retirementAge:
          type: integer
          description: >
            Planned retirement age (in month since birth).
            If omitted, the regular payment age is assumed.
          examples:
            - 780
        date:
          $ref: '#/components/schemas/Date'
          description: >
            Date of the (first) payment.
            If omitted: tomorrow.
        paymentSize:
          type: number
          description: >
            The size of individual periodic payments.
            If omitted, 0 or equal to 'amount', a one-time payment is assumed.
          examples:
            - 10000.00
        paymentFrequency:
          $ref: '#/components/schemas/PaymentFrequency'

    PaymentFrequency:
      type: integer
      description: |
        Number of payments per year.
        Possible values:
        * 0: One-time payment
        * 1: Annual payment
        * 2: Semi-annual payment
        * 4: Quarterly payment
        * 12: Monthly payment
      examples:
        - 0

    Transactions:
      type: object
      description: Retirement capital transactions.
      required:
        - transaction
        - from
        - to
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          description: Chronologically sorted list of transactions.
        from:
          $ref: '#/components/schemas/Date'
          description: Start of date range (inclusive).
        to:
          $ref: '#/components/schemas/Date'
          description: End of date range (inclusive).

    Transaction:
      type: object
      description: Transaction affecting the retirement capital.
      required:
        - category
        - date
        - amount
        - reason
        - balance
      properties:
        id:
          type: string
          description: Transaction ID.
          examples:
            - TR-683463823
        category:
          type: string
          description: |
            Transaction category:
            * `carryover`: Pseudo transaction to provide the carryover from the preceding period
            * `transfer`: Transfer in and out of the fund (related to an start and end of employment)
            * `employeeContribution`: Employee contribution as part of salary payment
            * `employerContribution`: Employer contribution as part of salary payment
            * `homeOwnershipEncouragement`: Transaction related to home ownerhsip encouragement scheme
            * `voluntaryPurchase`: Transaction related to voluntary purchse of retirement benefits
            * `securityInvestment`: Transaction related to a security investment or deinvestment
            * `dividend`: Transaction related to payouts/distributions from security investments
            * `fee`: Transaction related to fees
            * `other`: Other reason for transaction not listed above
          enum:
            - carryover
            - transfer
            - employeeContribution
            - employerContribution
            - homeOwnershipEncouragement
            - voluntaryPurchase
            - securityInvestment
            - dividend
            - fee
            - other
          examples:
            - voluntaryPurchase
        date:
          $ref: '#/components/schemas/Date'
          description: Transaction date (date the transaction becomes effective financially).
        amount:
          type: number
          description: Transaction amount (in CHF, positive numbers for credits, negative numbers for debits).
          examples:
            - 10000.00
        reason:
          type: string
          description: >
            A human-readable description of the transaction reason, in the insured person's
            preferred language.
          examples:
            - Freiwilliger Einkauf
        balance:
          type: number
          format: double
          description: Retirement capital balance after transaction.
          examples:
            - 63842.50

    InterestRate:
      type: number
      format: double
      description: Common interest rate object.
      examples:
        - 3.175

    # ---- Common Error Response ----
    CommonErrorResponse:
      title: Common Error Response
      type: object
      description: Common Error Response.
      properties:
        type:
          $ref: '#/components/schemas/CommonErrorType'
        title:
          type: string
          description: The error title.
          examples:
            - This is the general problem description
        detail:
          type: string
          description: Details about the error.
          examples:
            - Detailed problem description with respect to the current request, e.g., invalid account number format
        instance:
          type: string
          description: Instance of the error.
          examples:
            - path/to/corresponding/resource

    CommonErrorType:
      title: Common Error Type
      type: string
      description: Error Types for commonErrorResponse.
      enum:
        - /problems/INVALID_PAYLOAD
        - /problems/MALFORMED_PAYLOAD
        - /problems/INVALID_TOKEN
        - /problems/EXPIRED_TOKEN
        - /problems/INSUFFICIENT_PRIVILEGES
        - /problems/NO_ACCESS_TO_RESOURCE
        - /problems/RESOURCE_DOES_NOT_EXIST
        - /problems/RESOURCE_NOT_READY
        - /problems/RESOURCE_TOO_LARGE
        - /problems/WRONG_METHOD
        - /problems/OPERATION_NOT_ALLOWED
        - /problems/TECHNICAL_ERROR
        - /problems/NOT_IMPLEMENTED
        - /problems/SERVICE_UNAVAILABLE
      examples:
        - /problems/TECHNICAL_ERROR

    # ---- Common Data Model ----
    Date:
      type: string
      description: Common date format.
      format: date
      examples:
        - 2018-04-13

    DateTime:
      type: string
      description: Common date-time format.
      format: date-time
      examples:
        - 2018-04-13T11:11:11Z

  # ---- Responses - Standard Errors Common Data Model ----
  responses:
    standard400:
      description: Some of the input is incomplete or invalid for starting a request.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/CommonErrorResponse'

    standard401:
      description: Access token is missing or invalid.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/CommonErrorResponse'

    standard404:
      description: Invalid ID / no authorization to access data.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/CommonErrorResponse'

    standard500:
      description: >
        Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/CommonErrorResponse'

  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read:basic_pension_data: Access to basic pension data (user profile, pension statements, and transactions).
            read:pension_plan: Access to pension plan description.
